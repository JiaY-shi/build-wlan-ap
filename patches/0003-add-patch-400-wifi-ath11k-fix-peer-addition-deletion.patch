From 30c23d752662603bef1bb466af3c915efb538672 Mon Sep 17 00:00:00 2001
From: JiaY-shi <shi05275@163.com>
Date: Sat, 1 Apr 2023 16:36:22 +0800
Subject: [PATCH 3/5] add patch:
 400-wifi-ath11k-fix-peer-addition-deletion-error-on-sta-band-migration.patch

---
 ...deletion-error-on-sta-band-migration.patch | 51 +++++++++++++++++++
 1 file changed, 51 insertions(+)
 create mode 100644 feeds/ipq807x_v5.4/mac80211/patches/qca/400-wifi-ath11k-fix-peer-addition-deletion-error-on-sta-band-migration.patch

diff --git a/feeds/ipq807x_v5.4/mac80211/patches/qca/400-wifi-ath11k-fix-peer-addition-deletion-error-on-sta-band-migration.patch b/feeds/ipq807x_v5.4/mac80211/patches/qca/400-wifi-ath11k-fix-peer-addition-deletion-error-on-sta-band-migration.patch
new file mode 100644
index 00000000..1c6ca545
--- /dev/null
+++ b/feeds/ipq807x_v5.4/mac80211/patches/qca/400-wifi-ath11k-fix-peer-addition-deletion-error-on-sta-band-migration.patch
@@ -0,0 +1,51 @@
+--- a/drivers/net/wireless/ath/ath11k/peer.c
++++ b/drivers/net/wireless/ath/ath11k/peer.c
+@@ -799,6 +799,20 @@ int ath11k_peer_delete(struct ath11k *ar
+ 	spin_lock_bh(&ar->ab->base_lock);
+ 
+ 	peer = ath11k_peer_find_by_addr(ar->ab, addr);
++	/* Check if the found peer is what we want to remove.
++	 * While the sta is transitioning to another band we may
++	 * have 2 peer with the same addr assigned to different
++	 * vdev_id. Make sure we are deleting the correct peer.
++	 */
++	if (peer && peer->vdev_id == vdev_id)
++		ath11k_peer_rhash_delete(ar->ab, peer);
++
++	/* Fallback to peer list search if the correct peer can't be found.
++	 * Skip the deletion of the peer from the rhash since it has already
++	 * been deleted in peer add.
++	 */
++	if (!peer)
++		peer = ath11k_peer_find(ar->ab, vdev_id, addr);
+ 	if (peer) {
+ #ifdef CPTCFG_ATH11K_NSS_SUPPORT
+ 		peer->delete_in_progress = true;
+@@ -819,7 +833,6 @@ int ath11k_peer_delete(struct ath11k *ar
+ 				}
+ 			}
+ #endif
+-		ath11k_peer_rhash_delete(ar->ab, peer);
+ 	}
+ 	spin_unlock_bh(&ar->ab->base_lock);
+ 	mutex_unlock(&ar->ab->tbl_mtx_lock);
+@@ -870,8 +883,17 @@ int ath11k_peer_create(struct ath11k *ar
+ 	spin_lock_bh(&ar->ab->base_lock);
+ 	peer = ath11k_peer_find_by_addr(ar->ab, param->peer_addr);
+ 	if (peer) {
+-		spin_unlock_bh(&ar->ab->base_lock);
+-		return -EINVAL;
++		if (peer->vdev_id == param->vdev_id) {
++			spin_unlock_bh(&ar->ab->base_lock);
++			return -EINVAL;
++		}
++
++		/* Assume sta is transitioning to another band.
++		 * Remove here the peer from rhash.
++		 */
++		mutex_lock(&ar->ab->tbl_mtx_lock);
++		ath11k_peer_rhash_delete(ar->ab, peer);
++		mutex_unlock(&ar->ab->tbl_mtx_lock);
+ 	}
+ 	spin_unlock_bh(&ar->ab->base_lock);
+ 
-- 
2.34.1


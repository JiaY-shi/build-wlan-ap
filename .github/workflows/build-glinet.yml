
name: build gl.inet

on:
  workflow_dispatch:
    inputs:
      device:
        description: '选择设备'     
        required: true
        default: 'glinet_ax1800' 
        type: choice
        options:
          - glinet_ax1800
          - glinet_axt1800

      default-settings:
        description: '是否包含default-settings'
        required: true
        type: boolean
        
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - name: update
      run: |
        sudo apt update
        sudo apt upgrade -y
        sudo apt install python build-essential libncurses5-dev gawk git libssl-dev gettext zlib1g-dev swig unzip time rsync python3 python3-setuptools python3-yaml subversion -y
        git config --global user.email "shi05275@163.com"
        git config --global user.name "JiaY-shi"

    - name: Set Default Settings
      if: ${{ inputs.default-settings }}
      run: |
        sed -i '/packages/a \  - default-settings' glinet.yml

    - name: make 
      run: |
        ./build.sh ~ ${{ inputs.device }}
        cd ~/wlan-ap/openwrt
        make -j$(expr $(nproc) + 1) V=s

    - name: Organize files
      id: organize
      if: true && !failure() && !cancelled()
      run: |
        cd ~/wlan-ap/openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled() && !failure()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Generate release tag
      id: tag
      if: true && !failure() && !cancelled()
      run: |
        echo "release_tag=${{inputs.device}}.$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT
        echo "status=success" >> $GITHUB_OUTPUT 

    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled() && !failure()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        files: ${{ env.FIRMWARE }}/*
